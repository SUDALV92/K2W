<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRedAbyssColoredFruit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oRedColoredFruit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BounceCount = 0;
AngleDelta = choose( -2, 2 );
FirstLightCreated = false;
SecondLightReady = false;
SecondLightCreated = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( bbox_bottom &gt;= 576 ) {
    BounceCount++;
    if( BounceCount == 1 ) {
        direction = 360 - direction;
        direction += ( 90 - direction ) * 0.5;
        AngleDelta = -AngleDelta;
        speed *= 1.9;
    } else if( direction &gt; 180 &amp;&amp; direction &lt; 360 &amp;&amp; BounceCount == 2 ) {
        direction = 90;
        AngleDelta /= 2;
        AngleDelta = -AngleDelta;
        speed *= 0.8;
        scrRedChangeInstanceColor( id, make_color_hsv( Hue, 50, 255 ), 12 );
    } else if( y &gt; 608 + 24 ) {
        instance_destroy();
    }
} else if( bbox_bottom &gt;= 558 &amp;&amp; vspeed &gt; 0 ) {
    if( !FirstLightCreated ) {
        var line1 = scrRedCreateFadingImpulse( scrRedGetBCLine(), x - 32 + hspeed * 3, 8, 8 );
        line1.image_blend = image_blend;
        line1.image_xscale = 3.0;
        FirstLightCreated = true;
    } else if( SecondLightReady &amp;&amp; !SecondLightCreated ) {
        var line1 = scrRedCreateFadingImpulse( scrRedGetBCLine(), x - 32 + hspeed * 3, 8, 8 );
        line1.image_blend = image_blend;
        line1.image_xscale = 3.0;
        SecondLightReady = false;
        SecondLightCreated = true;
    }
}
if( !SecondLightCreated &amp;&amp; FirstLightCreated &amp;&amp; vspeed &lt;= 0 ) {
    SecondLightReady = true;
}

image_angle += AngleDelta;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
