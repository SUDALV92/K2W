<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRedAbyssColoredFruit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oRedBoundColoredFruit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Hue = random_range( Circle.SpawnHueMin, Circle.SpawnHueMax );
Saturation = 242;
scrRedSetFruitColor( Hue, Saturation, 255 );
TargetHue = Hue;
TargetSaturation = Saturation;
alarm[0] = 20;
speed = 7;

TrailCount = 7;
PrevPositionsIndex = 0;
for( var i = 0; i &lt; TrailCount; i++ ) {
    PrevPositionsX[i] = x;
    PrevPositionsY[i] = y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction += Circle.CurveDir * 20;
alarm[0] = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>PrevPositionsX[PrevPositionsIndex] = x;
PrevPositionsY[PrevPositionsIndex] = y;
PrevPositionsIndex++;
if( PrevPositionsIndex &gt;= TrailCount ) {
    PrevPositionsIndex = 0;
}
speed = clamp( speed, 4, 8 );

if( Hue != TargetHue ) {
    var delta = TargetHue - Hue;
    if( abs( delta ) &lt; 5 ) {
        Hue = TargetHue;
    } else {
        Hue += delta * 0.15;
    }
}
if( Saturation != TargetSaturation ) {
    var delta = TargetSaturation - Saturation;
    if( abs( delta ) &lt; 5 ) {
        Saturation = TargetSaturation;
    } else {
        Saturation += delta * 0.15;
    }
}
var val = min( 255, Saturation + 150 );
scrRedSetFruitColor( Hue, Saturation, val );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
var currentIndex = PrevPositionsIndex;
var currentScale = 3 / ( TrailCount + 3 );
for( var i = 0; i &lt; TrailCount; i++ ) {
    currentScale += 1 / ( TrailCount + 3 );
    draw_sprite_ext( sprRedTrailFruit, image_index, PrevPositionsX[currentIndex], PrevPositionsY[currentIndex], currentScale, currentScale, image_angle, image_blend, 0.15 );
    currentIndex++;
    if( currentIndex &gt;= TrailCount ) {
        currentIndex = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
