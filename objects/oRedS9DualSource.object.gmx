<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRedAbyssFruit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1100003</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>XStart = 48;
XEnd = 800 - XStart;
XDuration = 68;
XStep = XDuration / 2;

YStart = 48;
YEnd = 150;
YDuration = XDuration / 2;
YStep = YDuration / 2;

x = ( XStart + XEnd ) / 2;
y = ( YStart + YEnd ) / 2;

RayAngle = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrRedDestroy( oRedS9DualRay );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>XStep++;
if( XStep &gt;= XDuration ) {
    XStep = 0;
    scrRedS9SwitchMovePointsX( id );
}
YStep++;
if( YStep &gt;= YDuration ) {
    YStep = 0;
    scrRedS9SwitchMovePointsY( id );
}

x = scrRedTweenSineInOut( XStart, XEnd - XStart, XStep, XDuration );
y = scrRedTweenSineInOut( YStart, YEnd - YStart, YStep, YDuration );

RayAngle += AngleDelta;
repeat( 1 ) {
    var ray = instance_create( x, y, oRedS9DualRay );
    ray.StartDirection = random( 360 );
    ray.image_angle = ray.StartDirection + RayAngle;
    ray.RadiusDelta = random_range( 1, 3 );
    ray.Spawner = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var separationX = oRedS9ScreenSeparator.SeparationX;
var overlapWidth = oRedS9ScreenSeparator.OverlapWidth;
var overlapHWidth = overlapWidth / 2;
var separationLeft = separationX - overlapHWidth;
var separationRight = separationX + overlapHWidth;
if( x - 22 &lt;= separationRight ) {
    surface_set_target( oRedS9ScreenSeparator.BlueSurface );
    var alpha = 1 - max( 0, x - separationLeft ) / overlapWidth;
    draw_sprite_ext( sprRedAbyssFruit, FruitIndex, x, y, 2, 2, 0, c_white, alpha );
    surface_reset_target();
}
if( x + 64 &gt;= separationLeft ) {
    surface_set_target( oRedS9ScreenSeparator.RedSurface );
    var alpha = 1 - max( 0, separationRight - x ) / overlapWidth;
    draw_sprite_ext( sprRedAbyssSpawner, 0, x - separationX + overlapHWidth, y, 1, 1, image_angle, c_red, 0.6 * alpha );
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
