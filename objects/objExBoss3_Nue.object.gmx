<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprHoujuuNue</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 1/5;
image_xscale = -1;

t = 0;

hp = 0;

state = "Change";
next = "Phase1";

inv = true;

movy = y;

instance_create(x - 55, y - 59, objExBoss3_HPBar);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Image Blinking
image_alpha = random_range(0.15,0.85);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase 1
/*
if( phase == 1 ) {
    if( t &gt; 90 ) {
        if( t mod 9 == 0 ) {
            //a = instance_create(-8, random_range(20, 580), objExBoss3_NueBall1);
            //a.direction = 0;
            //a.speed = random_range(2,4);
            a = instance_create(808, random_range(20, 580), objExBoss3_NueBall2);
            a.direction = 180;
            a.speed = random_range(2,4);
        }
        if( t mod 41 == 0 ) {
            a = instance_create(random_range(40,200),random_range(40,568),objExBoss3_SolgrynBall1);
            a.image_alpha = 0;
        }
    }
    
    t++;
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase 2
/*
if( phase == 2 ) {
    if( t &gt; 90 ) {
        
    }
    
    t++;
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase 4
/*
if( phase == 4 ) {
    if( t == 90 ) {
        for( i = 38; i &lt; 608; i += 152 ) {
            a = instance_create(736, i + 600, objExBoss3_UFOGreen);
            a.direction = 90;
            a.speed = 4;
        }
        for( i = 114; i &lt; 608; i += 152 ) {
            a = instance_create(736, i - 600, objExBoss3_UFOGreen);
            a.direction = 270;
            a.speed = 4;
        }
        
        movy = irandom_range(96, 512);
    }
    
    if( t == 240 ) {
        with(objExBoss3_UFOGreen) {
            speed = 0;
            event_user(0);
        }
    }
    
    if( t == 390 ) {
        with(objExBoss3_UFOGreen) {
            instance_destroy();
        }
        t = 70;
    }
    
    //Движение
    if( abs(y-movy) &lt;= 1 ) {
        y = movy;
    } else {
        y = lerp(y, movy, 0.05);
    }
    
    t++;
}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///States
if(!instance_exists(objExBoss3_Gradius)) exit;

switch(state) {
    case "Change":
        if( t == 0 ) {
            inv = true;
            if(next != "Phase1")
             audio_play_sound(global.sndEnep,0,0);
        }
        if( t &gt; 40 &amp;&amp; t &lt;= 90 ) {
            hp = lerp(0, 150, (t - 40)/50);
        }
        if( t == 90 ) {
            hp = 150;
            state = next;
            inv = false;
            t = 0;
        } else {
            t++;
        }
        break;
        
    case "Phase1":
        score = 20 * (4-0) + (150 * (3-0) + hp); //DeadSplitSupport 
        if( t mod 6 == 0 ) {
            a = instance_create(808, random_range(20, 580), objExBoss3_NueBall2);
            a.direction = 180;
            a.speed = random_range(2,4);
        }
        if( t mod 31 == 0 ) {
            a = instance_create(random_range(40,200),random_range(40,568),objExBoss3_SolgrynBall1);
            a.image_alpha = 0;
        }
        
        if( hp &lt;= 0 ) {
            state = "Change";
            t = 0;
            next = "Phase2";
            
            with(objExBoss3_SolgrynBall1) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
            with(objExBoss3_NueBall1) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
            with(objExBoss3_NueBall2) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
        } else {
            t++;
        }
        break;
        
    case "Phase2":
        score = 20 * (4-1) + (150 * (3-1) + hp); //DeadSplitSupport 
        if( t == 0 ) {
            for( i = 0; i &lt; 360; i += 14.4 ) {
                a = instance_create(x, y, objExBoss3_BounceBall);
                a.direction = i;
                a.speed = 5;
            }
        }
        
        if( t mod 20 == 0 ) {
            instance_create(random_range(650,750), random_range(100, 500), objExBoss3_SolgrynSpawner);
        }
        
        if( hp &lt;= 0 ) {
            state = "Change";
            t = 0;
            next = "Phase3";
            with(objExBoss3_BounceBall) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
            with(objExBoss3_SolgrynBullet) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
        } else {
            t++;
        }
        break;
        
    case "Phase3":
        score = 20 * (4-2) + (150 * (3-2) + hp); //DeadSplitSupport 
        if(t == 100) {
             instance_create(850, y, objExBoss3_UFORainbow);
        }
        if( t mod 100 == 0 ) {
            instance_create(850, y + choose(-180,180), objExBoss3_UFORainbow);
        }
        
        if( t mod 600 == 50 ) {
            instance_create(688, 128, objExBoss3_Sanae);
        }
        
        if( t mod 600 == 200 ) {
            instance_create(688, 480, objExBoss3_Koishi);
        }
        
        if( t mod 600 == 350 ) {
            with(objExBoss3_Sanae) {
                C = 1;
            }
        }
        
        if( t mod 600 == 500 ) {
            with(objExBoss3_Koishi) {
                C = 1;
            }
        }
    
        if( hp &lt;= 0 ) {
            state = "Change";
            t = 0;
            next = "Phase4";
            
            with(objExBoss3_UFORainbow) {
                instance_destroy();
            }
            with(objExBoss3_Koishi) {
                C = 1;
            }
            with(objExBoss3_Sanae) {
                C = 1;
            }
            with(objExBoss3_SanaeBullet) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
            with(objExBoss3_KoishiBullet1) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
            with(objExBoss3_KoishiBullet2) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
            with(objExBoss3_UFORainbowBullet) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
        } else {
            t++;
        }
        break;
        
    case "Phase4":
        score = 20 * (4-3) + (150 * (3-3) + hp); //DeadSplitSupport 
        if( t == 0 ) {
            for( i = 38; i &lt; 608; i += 152 ) {
                a = instance_create(736, i + 600, objExBoss3_UFOGreen);
                a.direction = 90;
                a.speed = 4;
            }
            for( i = 114; i &lt; 608; i += 152 ) {
                a = instance_create(736, i - 600, objExBoss3_UFOGreen);
                a.direction = 270;
                a.speed = 4;
            }
            
            movy = irandom_range(96, 512);
        }
        
        if( t == 150 ) {
            with(objExBoss3_UFOGreen) {
                speed = 0;
                event_user(0);
            }
        }
        
        if( t == 300 ) {
            with(objExBoss3_UFOGreen) {
                instance_destroy();
            }
            t = -10;
        }
        
        //Движение
        if( abs(y-movy) &lt;= 1 ) {
            y = movy;
        } else {
            y = lerp(y, movy, 0.05);
        }
        
        if( hp &lt;= 0 ) {
            state = "Death";
            t = 0;
            
            with(objExBoss3_UFOGreen) {
                ispr = sprite_index;
                iind = image_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = ispr;
                image_index = iind;
            }
            with(objExBoss3_UFOGreenBullet) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
            with(objExBoss3_UFOGreenLaser) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
            with(objExBoss3_UFOGreenLaserSide) {
                spr = sprite_index;
                instance_change(objExBoss3_Fader,false);
                sprite_index = spr;
            }
        } else {
            t++;
        }
        break;
        
    case "Death":
        image_alpha -= 0.05;
        if(t == 0)
        {
            audio_play_sound(global.sndEnep,0,0);            
            audio_sound_gain(global.currentMusic,0,2000);
            fadein = instance_create(-100,-100,objExtraBossFadeIn);
            fadein.depth = -80;
        }
        if(t == 150)
        {
            room_goto(rExBoss4);
            
            if(global.achievement[30] == 0)
            {
             global.achievement[30] = 1;
             achievement = instance_create(0,0,objAchievement);
             achievement.index = 61;
            }
        }
        t++;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other) {
    instance_destroy();
}
if( !inv ) {
    audio_play_sound(global.sndBossHit,0,0); 
    hp--;
}
/*
if( hp &lt;= 0 ) {
    t = 0;
    hp = 100;
    if( phase == 1 ) {
        with(objExBoss3_SolgrynBall1) {
            spr = sprite_index;
            instance_change(objExBoss3_Fader,false);
            sprite_index = spr;
        }
        with(objExBoss3_NueBall1) {
            spr = sprite_index;
            instance_change(objExBoss3_Fader,false);
            sprite_index = spr;
        }
        with(objExBoss3_NueBall2) {
            spr = sprite_index;
            instance_change(objExBoss3_Fader,false);
            sprite_index = spr;
        }
    }
    if( phase == 4 ) {
        with(objExBoss3_UFOGreen) {
            ispr = sprite_index;
            iind = image_index;
            instance_change(objExBoss3_Fader,false);
            sprite_index = ispr;
            image_index = iind;
        }
        with(objExBoss3_UFOGreenBullet) {
            spr = sprite_index;
            instance_change(objExBoss3_Fader,false);
            sprite_index = spr;
        }
        with(objExBoss3_UFOGreenLaser) {
            spr = sprite_index;
            instance_change(objExBoss3_Fader,false);
            sprite_index = spr;
        }
        with(objExBoss3_UFOGreenLaserSide) {
            spr = sprite_index;
            instance_change(objExBoss3_Fader,false);
            sprite_index = spr;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>score = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
