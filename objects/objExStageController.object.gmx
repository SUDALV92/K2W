<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 1;
tile_layer_hide(200);
tile_layer_hide(199);
tile_layer_hide(198);
tile_layer_hide(197);
alarm[0] = 1;
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(all)
{
    type = "";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(phase)
{
    case 1:
        tile_layer_show(200);
        with(objSpikeUp)
        {
            sprite_index = sprGraySpikeUp;
        }
        with(objSpikeDown)
        {
            sprite_index = sprGraySpikeDown;
        }
        with(objSpikeLeft)
        {
            sprite_index = sprGraySpikeLeft;
        }
        with(objSpikeRight)
        {
            sprite_index = sprGraySpikeRight;
        }
        break;
    case 2: //TTT
        tile_layer_hide(200);
        tile_layer_show(199);
        background_visible[0] = false;
        background_visible[1] = true;
        
        ttt = instance_create(144,592,objTTTSpike);
        ttt.type = "TTT";
        ttt = instance_create(256,592,objTTTSpike);
        ttt.type = "TTT";
        ttt = instance_create(304,480,objTTTSpike);
        ttt.type = "TTT";        
        ttt = instance_create(208,576,objMorejump1);
        ttt.type = "TTT";
        ttt = instance_create(304,576,objMorejump1);
        ttt.type = "TTT";
        ttt = instance_create(320,576,objWalljumpR);
        ttt.type = "TTT";
        platform = instance_create(656,544,objMovingPlatform);
        platform.hspeed = 2;
        platform.sprite_index = sprTTTPlatform;
        platform.type = "TTT";        
        rain = instance_create(0,0,objRain);
        rain.type = "TTT";
        kirby = instance_create(0,0,objJetkirbystart);
        kirby.type = "TTT";
        
        with(objSpikeUp)
        {
            sprite_index = sprTTTSpikeUp;
        }
        with(objSpikeDown)
        {
            sprite_index = sprTTTSpikeDown;
        }
        with(objSpikeLeft)
        {
            sprite_index = sprTTTSpikeLeft;
        }
        with(objSpikeRight)
        {
            sprite_index = sprTTTSpikeRight;
        }
        with(objETGSpikeTrapDown)
        {
            sprite_index = sprTTTSpikeDown;
        }
        with(objETGSpikeTrapRight)
        {
            sprite_index = sprTTTSpikeRight;
        }
        with(objETGSpikeTrapUp)
        {
            sprite_index = sprTTTSpikeUp;
        }
        with(objETGSpikeTrapLeft)
        {
            sprite_index = sprTTTSpikeLeft;
        }
        with(objETGBlockTrap)
        {
            sprite_index = sprTTTBlock;
        }
        with(objBlockFake)
        {
            instance_deactivate_object(id);
        }
        break;
    case 3: //ETG
        instance_destroy(objJetkirby);
        effect_clear();
        with(all)
        {
            if(type == "TTT")
                instance_destroy();
        }        
        instance_activate_object(objBlockFake);
        tile_layer_hide(199);
        tile_layer_show(200);
        background_visible[1] = false;
        background_visible[0] = true;
        with(objSpikeUp)
        {
            sprite_index = sprGraySpikeUp;
        }
        with(objSpikeDown)
        {
            sprite_index = sprGraySpikeDown;
        }
        with(objSpikeLeft)
        {
            sprite_index = sprGraySpikeLeft;
        }
        with(objSpikeRight)
        {
            sprite_index = sprGraySpikeRight;
        }
        with(objETGSpikeTrapDown)
        {
            sprite_index = sprGraySpikeDown;
        }
        with(objETGSpikeTrapRight)
        {
            sprite_index = sprGraySpikeRight;
        }
        with(objETGSpikeTrapUp)
        {
            sprite_index = sprGraySpikeUp;
        }
        with(objETGSpikeTrapLeft)
        {
            sprite_index = sprGraySpikeLeft;
        }
        with(objETGBlockTrap)
        {
            sprite_index = sprDisableBlock2;
        }
        trigger = instance_create(144,192,objFreeTrigger);
        trigger.image_xscale = 0.5;
        trigger.image_yscale = 4;
        trigger.trg = 8;
        trigger.type = "";
        
        trigger = instance_create(416,448,objFreeTrigger);
        trigger.image_xscale = 1;
        trigger.image_yscale = 2;
        trigger.trg = 6;
        trigger.type = "";
                
        trigger = instance_create(392,448,objFreeTrigger);
        trigger.image_xscale = 0.5;
        trigger.image_yscale = 3;
        trigger.trg = 7;
        trigger.type = "";
        break;
    case 4://500
        tile_layer_hide(200);
        tile_layer_show(198);
        background_visible[0] = false;
        background_visible[2] = true;
        with(objSpikeUp)
        {
            sprite_index = sprSpikeUp;
            image_speed = 1/3;
        }
        with(objSpikeDown)
        {
            sprite_index = sprSpikeDown;
            image_speed = 1/3;
        }
        with(objSpikeLeft)
        {
            sprite_index = sprSpikeLeft;
            image_speed = 1/3;
        }
        with(objSpikeRight)
        {
            sprite_index = sprSpikeRight;
            image_speed = 1/3;
        }
        with(objETGSpikeTrapDown)
        {
            sprite_index = sprSpikeDown;
            image_speed = 1/3;
        }
        with(objETGSpikeTrapRight)
        {
            sprite_index = sprSpikeRight;
            image_speed = 1/3;
        }
        with(objETGSpikeTrapUp)
        {
            sprite_index = sprSpikeUp;
            image_speed = 1/3;
        }
        with(objETGSpikeTrapLeft)
        {
            sprite_index = sprSpikeLeft;
            image_speed = 1/3;
        }
        with(objETGBlockTrap)
        {
            sprite_index = sprDisableBlock4;
        }
        with(objBlockFake)
        {
            if(sprite_index == sprDisableBlock1)
                sprite_index = sprDisableBlock3;
            if(sprite_index == sprDisableBlock2)
                sprite_index = sprDisableBlock4;
        }
        invisBlock = instance_create(736,128,objBlockInvis);
        invisBlock.sprite_index = sprDisableBlock3;
        invisBlock.type = "";
        
        invisBlock = instance_create(768,128,objBlockInvis);
        invisBlock.sprite_index = sprDisableBlock4;
        invisBlock.type = "";
        
        changer = instance_create(768,160,objFreeTrigger);
        changer.image_yscale = 2;
        changer.trg = 9;
        changer.type = "";
        
        changer = instance_create(160,512,objFreeTrigger);
        changer.image_xscale = 0.5;
        changer.image_yscale = 3;
        changer.trg = 11;
        changer.type = "";
        
        changer = instance_create(480,384,objFreeTrigger);
        changer.image_xscale = 0.5;
        changer.image_yscale = 3;
        changer.trg = 12;
        changer.type = "";
        
        changer = instance_create(704,448,objFreeTrigger);
        changer.image_xscale = 1;
        changer.image_yscale = 0.5;
        changer.trg = 13;
        changer.type = "";
        break;
    case 5:
         background_visible[2] = false;
         background_visible[3] = true;
         tile_layer_show(197);
         tile_layer_hide(198);
         instance_deactivate_object(objBlockFake);
         with(objETGBlockTrap)
         {
            sprite_index = sprRunTerminalBlock1;
         }
         with(objSpikeUp)
        {
            sprite_index = sprRTTSpikeUp;
            image_speed = 1/3;
        }
        with(objSpikeDown)
        {
            sprite_index = sprRTTSpikeDown;
            image_speed = 1/3;
        }
        with(objSpikeLeft)
        {
            sprite_index = sprRTTSpikeLeft;
            image_speed = 1/3;
        }
        with(objSpikeRight)
        {
            sprite_index = sprRTTSpikeRight;
            image_speed = 1/3;
        }
        with(objETGSpikeTrapDown)
        {
            sprite_index = sprRTTSpikeDown;
            image_speed = 1/3;
        }
        with(objETGSpikeTrapRight)
        {
            sprite_index = sprRTTSpikeRight;
            image_speed = 1/3;
        }
        with(objETGSpikeTrapUp)
        {
            sprite_index = sprRTTSpikeUp;
            image_speed = 1/3;
        }
        with(objETGSpikeTrapLeft)
        {
            sprite_index = sprRTTSpikeLeft;
            image_speed = 1/3;
        }
         with(objBlockInvis)
         {
            if(sprite_index == sprDisableBlock3)
            {
                sprite_index = sprRunTerminalBlock2;
            }
            if(sprite_index == sprDisableBlock4)
            {
                sprite_index = sprRunTerminalBlock1;
            }
         }
         line = instance_create(160,80,objRTTRedline);
         line.type = "RTT";
         break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
