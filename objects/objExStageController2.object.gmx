<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objExStageController</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 1;
tile_layer_hide(101);
tile_layer_hide(102);
tile_layer_hide(103);
alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(all)
{
    type = "";
}
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(phase)
{
    case 1:
         warp = instance_create(672,544,objExtraRoomChanger);
         warp.type = "";
         warp.phase = 2;
         with(objExStage2Up)
         {
          if(trap == 1 || trap == 9 || trap == 22)
           sprite_index = sprCQSpikeUp;
         }
         with(objExStage2Down)
         {
         if(trap == 1 || trap == 9 || trap == 22)
          sprite_index = sprCQSpikeDown;
         }
         with(objExStage2Left)
         {
             if(trap == 1)
              sprite_index = sprCQSpikeLeft;
         }
         with(objExStage2Right)
         {
             if(trap == 1)
              sprite_index = sprCQSpikeRight;
         }
         with(objExStage2Block)
         {
          sprite_index = sprCQBlock;
         }
         break;
    case 2: //Dark BLue
         tile_layer_hide(100);
         tile_layer_show(101);
         background_visible[0] = false;
         background_visible[1] = true;
         with(objExStage2Up)
         {
          sprite_index = sprSpikeUp;
         }
         with(objExStage2Down)
         {
          sprite_index = sprSpikeDown;
         }
         with(objExStage2Left)
         {
          sprite_index = sprSpikeLeft;
         }
         with(objExStage2Right)
         {
          sprite_index = sprSpikeRight;
         }
         with(objExStage2Block)
         {
          if(trap == 6 || trap == 7 || trap == 8)
           instance_destroy();
          else sprite_index = sprDarkBlueBlock;
         }
         block = instance_create(256,192,objMovingBlock1);
         block.type = "DarkBlue";
         block.trap = 2;
         
         block = instance_create(512,64,objMovingBlock1);
         block.type = "DarkBlue";
         block.trap = 8;
         
         block = instance_create(576,64,objMovingBlock1);
         block.type = "DarkBlue";
         block.trap = 7;
         
         warp = instance_create(640,32,objExtraRoomChanger);
         warp.image_xscale = 0.5;
         warp.image_yscale = 3;
         warp.type = "";
         warp.phase = 3;
         break;
    case 3: //CQ
         tile_layer_hide(101);
         tile_layer_show(100);
         background_visible[0] = true;
         background_visible[1] = false;
         trigger = instance_create(608,32,objFreeTrigger);
         trigger.type = "";
         trigger.image_xscale = 3;
         trigger.image_yscale = 2;
         trigger.trg = 1;
         
         with(objExStage2Left)
         {
             if(trap == 1 || trap == 9 || trap == 22)
              sprite_index = sprCQSpikeLeft;
         }
         with(objExStage2Right)
         {
             if(trap == 1 || trap == 9 || trap == 22)
              sprite_index = sprCQSpikeRight;
         }
         with(objExStage2Up)
         {
             if(trap == 1 || trap == 9 || trap == 22)
              sprite_index = sprCQSpikeUp;
         }
         with(objExStage2Down)
         {
             if(trap == 1 || trap == 9 || trap == 22)
              sprite_index = sprCQSpikeDown;
         }
         
         with(all)
         {
          if(type == "DarkBlue")
          {
           block = instance_create(x,y,objExStage2Block);
           block.sprite_index = sprCQBlock;
           block.type = "";
           if(trap == 7)
                   block.trap = 2;
           else if(trap == 8)
                block.trap = 4;
           else block.trap = trap;
           instance_destroy();
          }
         }
         
         with(objExStage2Block)
         {
          sprite_index = sprCQBlock;
         }
         warp = instance_create(112,544,objExtraRoomChanger);
         warp.image_xscale = 1;
         warp.image_yscale = 1;
         warp.type = "";
         warp.phase = 4;
         break;
    case 4: //Skyclad
         tile_layer_hide(100);
         tile_layer_show(102);
         background_visible[0] = false;
         background_visible[2] = true;
         with(objExStage2Up)
         {
          if(color == 2)
          {
           skytrap = instance_create(x,y,objSkyrSpikeUp);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
          else if(color == 3)
          {
           skytrap = instance_create(x,y,objSkybSpikeUp);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
          else if(color == 4)
          {
           skytrap = instance_create(x,y,objSkygSpikeUp);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }      
          else
          {
           sprite_index = sprSpikeUp;
          }    
         }
         with(objExStage2Down)
         {
          if(color == 2)
          {
           skytrap = instance_create(x,y,objSkyrSpikeDown);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
          else if(color == 3)
          {
           skytrap = instance_create(x,y,objSkybSpikeDown);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
          else if(color == 4)
          {
           skytrap = instance_create(x,y,objSkygSpikeDown);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
          else
          {
           sprite_index = sprSpikeDown;
          }    
         }
         with(objExStage2Left)
         {
          if(color == 2)
          {
           skytrap = instance_create(x,y,objSkyrSpikeLeft);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
          else if(color == 3)
          {
           skytrap = instance_create(x,y,objSkybSpikeLeft);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
          else if(color == 4)
          {
           skytrap = instance_create(x,y,objSkygSpikeLeft);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
         }
         with(objExStage2Right)
         {
          if(color == 2)
          {
           skytrap = instance_create(x,y,objSkyrSpikeRight);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
          else if(color == 3)
          {
           skytrap = instance_create(x,y,objSkybSpikeRight);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
          else if(color == 4)
          {
           skytrap = instance_create(x,y,objSkygSpikeRight);
           skytrap.type = "Skyclad";
           skytrap.trap = trap;
           skytrap.depth = 1000001;
           instance_destroy();
          }
         }
         with(objExStage2Block)
         {
          if(trap == 2)
          {
           skytrap = instance_create(x,y,objSkyrBlockenable);
           skytrap.type = "Skyclad";
           instance_destroy();
          }
          else if(trap == 3)
          {
           skytrap = instance_create(x,y,objSkybBlockenable);
           skytrap.type = "Skyclad";
           instance_destroy();
          }
          else if(trap == 4)
          {
           skytrap = instance_create(x,y,objSkygBlockenable);
           skytrap.type = "Skyclad";
           instance_destroy();
          }
          else if(trap == 5)
          {
           skytrap = instance_create(x,y,objBlockFake);
           skytrap.type = "Skyclad";
           skytrap.sprite_index = sprDisableBlock5;
           instance_destroy();
          }
         }
         skytrap = instance_create(736,160,objBlockInvis);
         skytrap.type = "Skyclad";
         skytrap.sprite_index = sprDisableBlock5;
         
         skytrap = instance_create(480,256,objBlockInvis);
         skytrap.type = "Skyclad";
         skytrap.sprite_index = sprDisableBlock5;
         
         skytrap = instance_create(512,224,objBlockInvis);
         skytrap.type = "Skyclad";
         skytrap.sprite_index = sprDisableBlock5;
         
         fruit = instance_create(32,16,objColorfruit);
         fruit.type = "Skyclad";
         
         gage = instance_create(32,16,objColorgage);
         gage.type = "Skyclad"; 
         
         warp = instance_create(200,32,objExtraRoomChanger);
         warp.image_xscale = 0.5;
         warp.image_yscale = 3;
         warp.type = "";
         warp.phase = 5;
         break;
    case 5://CQ
         tile_layer_hide(102);
         tile_layer_show(100);
         background_visible[2] = false;
         background_visible[0] = true;
         with(objSkyrSpikeUp)
         {
          thetrap = instance_create(x,y,objExStage2Up);
          thetrap.type = "";    
          thetrap.trap = trap;      
         }
         with(objSkygSpikeUp)
         {
          thetrap = instance_create(x,y,objExStage2Up);
          thetrap.type = "";             
          thetrap.trap = trap;
         }
         with(objSkybSpikeUp)
         {
          thetrap = instance_create(x,y,objExStage2Up);
          thetrap.type = "";             
          thetrap.trap = trap;
         }
         with(objSkyrSpikeDown)
         {
          thetrap = instance_create(x,y,objExStage2Down);
          thetrap.type = "";             
          thetrap.trap = trap;
         }
         with(objSkygSpikeDown)
         {
          thetrap = instance_create(x,y,objExStage2Down);
          thetrap.type = "";            
          thetrap.trap = trap; 
         }
         with(objSkybSpikeDown)
         {
          thetrap = instance_create(x,y,objExStage2Down);
          thetrap.type = "";             
          thetrap.trap = trap;
         }
         with(objSkyrSpikeLeft)
         {
          thetrap = instance_create(x,y,objExStage2Left);
          thetrap.type = "";             
          thetrap.trap = trap;
         }
         with(objSkygSpikeLeft)
         {
          thetrap = instance_create(x,y,objExStage2Left);
          thetrap.type = "";             
          thetrap.trap = trap;
         }
         with(objSkybSpikeLeft)
         {
          thetrap = instance_create(x,y,objExStage2Left);
          thetrap.type = "";             
          thetrap.trap = trap;
         }
         with(objSkyrSpikeRight)
         {
          trap = instance_create(x,y,objExStage2Right);
          trap.type = "";            
          trap.trap = trap; 
         }
         with(objSkygSpikeRight)
         {
          thetrap = instance_create(x,y,objExStage2Right);
          thetrap.type = "";             
          thetrap.trap = trap;
         }
         with(objSkybSpikeRight)
         {
          thetrap = instance_create(x,y,objExStage2Right);
          thetrap.type = "";             
          thetrap.trap = trap;
         }
         with(objBlockInvis)
         {          
          instance_destroy();
         }
         with(objBlockFake)
         {
          ztrap = instance_create(x,y,objExStage2Block);
          ztrap.type = "";          
          ztrap.sprite_index = sprCQBlock;
          instance_destroy();
         }
         with(objSkyrBlockenable)
         {
          thetrap = instance_create(x,y,objExStage2Block);
          thetrap.type = "";          
          thetrap.sprite_index = sprCQBlock;
         }
         with(objSkygBlockenable)
         {
          thetrap = instance_create(x,y,objExStage2Block);
          thetrap.type = "";          
          thetrap.sprite_index = sprCQBlock;
         }
         with(objSkybBlockenable)
         {
          thetrap = instance_create(x,y,objExStage2Block);
          thetrap.type = "";          
          thetrap.sprite_index = sprCQBlock;
         }
         with(objSkyrBlockdisable)
         {
          thetrap = instance_create(x,y,objExStage2Block);
          thetrap.type = "";          
          thetrap.sprite_index = sprCQBlock;
         }
         with(objSkygBlockdisable)
         {
          thetrap = instance_create(x,y,objExStage2Block);
          thetrap.type = "";          
          thetrap.sprite_index = sprCQBlock;
         }
         with(objSkybBlockdisable)
         {
          thetrap = instance_create(x,y,objExStage2Block);
          thetrap.type = "";          
          thetrap.sprite_index = sprCQBlock;
         }
         with(all)
         {
          if(type == "Skyclad")
                  instance_destroy();
         }
         trigger = instance_create(64,32,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 2;
         trigger.image_xscale = 6;
         trigger.image_yscale = 4;
         with(objExStage2Up)
         {
          if(trap == 9 || trap == 22)
           sprite_index = sprCQSpikeUp;
         }
         with(objExStage2Down)
         {
         if(trap == 9 || trap == 22)
          sprite_index = sprCQSpikeDown;
         }
         warp = instance_create(0,32,objExtraRoomChanger);
         warp.type = "";
         warp.phase = 6;
         break;
    case 6: //DT
         tile_layer_hide(100);
         tile_layer_show(103);
         background_visible[0] = false;
         background_visible[3] = true;
         with(objSpikeUp)
         {
          image_index = 0;
          sprite_index = sprDTSpikeUp;          
         }
         with(objSpikeDown)
         {
          image_index = 0;
          sprite_index = sprDTSpikeDown;
         }
         with(objSpikeLeft)
         {
          image_index = 0;
          sprite_index = sprDTSpikeLeft;
         }
         with(objSpikeRight)
         {
          image_index = 0;
          sprite_index = sprDTSpikeRight;
         }
         with(objExStage2Up)
         {
          sprite_index = sprDTSpikeUp;
          image_index = 0;
          if(trap &gt; 9 &amp;&amp; trap != 22)
          {
           image_speed = 0;
           image_index = 2;
          }
         }
         with(objExStage2Down)
         {
          sprite_index = sprDTSpikeDown;
          image_index = 0;
          if(trap &gt; 9 &amp;&amp; trap != 22)
          {
           image_speed = 0;
           image_index = 2;
          }
         }
         with(objExStage2Left)
         {
          sprite_index = sprDTSpikeLeft;
          image_index = 0;
          if(trap &gt; 9)
          {
           image_speed = 0;
           image_index = 2;
          }
         }
         with(objExStage2Right)
         {
          sprite_index = sprDTSpikeRight;
          image_index = 0;
          if(trap &gt; 9)
          {
           image_speed = 0;
           image_index = 2;
          }
         }
         with(objExStage2Block)
         {
          sprite_index = sprDTBlock;
         }
         trigger = instance_create(288,32,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 3;
         trigger.image_yscale = 2;
         
         trigger = instance_create(400,32,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 4;
         trigger.image_yscale = 2;
         
         trigger = instance_create(496,32,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 5;
         trigger.image_yscale = 2;
         
         trigger = instance_create(288,160,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 7;
         trigger.image_yscale = 2;
         
         trigger = instance_create(416,208,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 8;
         trigger.image_yscale = 0.5;
         
         trigger = instance_create(288,496,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 9;
         trigger.image_xscale = 2;
         trigger.image_yscale = 0.5;
         
         trigger = instance_create(352,560,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 10;
         trigger.image_xscale = 1;
         trigger.image_yscale = 0.5;
         
         trigger = instance_create(384,432,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 11;
         trigger.image_xscale = 1;
         trigger.image_yscale = 0.5;
         
         warp = instance_create(768,448,objExtraRoomChanger);
         warp.type = "";
         warp.phase = 7;
         break;
    case 7: //CQ
         tile_layer_hide(103);
         tile_layer_show(100);
         
         background_visible[3] = false;
         background_visible[0] = true;
         
         trigger = instance_create(768,448,objFreeTrigger);
         trigger.type = "";
         trigger.trg = 12;
         
         with(objSpikeUp)
         {
          sprite_index = sprSpikeUp;
         }
         with(objSpikeDown)
         {
          sprite_index = sprSpikeDown;
         }
         with(objSpikeLeft)
         {
          sprite_index = sprSpikeLeft;
         }
         with(objSpikeRight)
         {
          sprite_index = sprSpikeRight;
         }
         with(objExStage2Up)
         {
          if(trap == 22)
              sprite_index = sprCQSpikeUp;
          else
              sprite_index = sprSpikeUp;
          image_speed = 1/3;
         }
         with(objExStage2Down)
         {
          if(trap == 22)
              sprite_index = sprCQSpikeDown;
          else
              sprite_index = sprSpikeDown;
          image_speed = 1/3;
         }
         with(objExStage2Left)
         {
          sprite_index = sprSpikeLeft;
          image_speed = 1/3;
         }
         with(objExStage2Right)
         {
          sprite_index = sprSpikeRight;
          image_speed = 1/3;
         }
         with(objExStage2Block)
         {
          sprite_index = sprCQBlock;
         }
         warp = instance_create(768,528,objExtraWarp);
         warp.roomTo = rExStage3;
         audio_play_sound(global.sndTrap,0,0);
         break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
