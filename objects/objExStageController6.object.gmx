<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objExStageController</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 1;
tile_layer_hide(101);
tile_layer_hide(102);
tile_layer_hide(1000002);
alarm[0] = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(all)
{
    type = "";
}
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(phase)
{
    case 1:
         scrCreateWarp(32,128,3,1,2);
         scrExTrapsChange6(sprSgSpikeUp,sprSgSpikeDown,sprSgSpikeLeft,sprSgSpikeRight);
         break;
    case 2:
         with(objExStage6Block)
         {
          sprite_index = sprBfSpikeBlock;
         }
         background_visible[0] = false;
         scrExTrapsChange6(sprBfSpikeUp,sprBfSpikeDown,sprBfSpikeLeft,sprBfSpikeRight);
         with(objLeftmgate)
         {
          instance_destroy();
         }
         with(objRightmgate)
         {
          instance_destroy();
         }
         with(objExStage6Block)
         {
          if(trap == 1)
          {
           instance_change(objBlockFake,true);
           sprite_index = sprBfSpikeBlock;
           type = "";
           trap = 1;
          }
         }
         invis = instance_create(32,416,objBlockInvis);
         invis.type = "Bf";
         invis.sprite_index = sprBfSpikeBlock;
         
         invis = instance_create(64,416,objBlockInvis);
         invis.type = "Bf";
         invis.sprite_index = sprBfSpikeBlock;
         
         invis = instance_create(96,416,objBlockInvis);
         invis.type = "Bf";
         invis.sprite_index = sprBfSpikeBlock;
         
         trg = instance_create(32,400,objFreeTrigger);
         trg.type = "";
         trg.trg = 1;
         trg.image_xscale = 3;
         
         break;
    case 3://symmetry
         with(objExStage6Block)
         {
          sprite_index = sprSyBlock;
         }
         with(all)
         {
          if(type == "Bf")
          {
           instance_destroy();
          }
         }
         scrCreateWarp(64,256,1,1,4);
         scrExTrapsChange6(sprSySpikeUp,sprSySpikeDown,sprSySpikeLeft,sprSySpikeRight);
         
         for(var i = 0;i&lt;3;i++)
         {
          block = instance_create(64,288+32*i,objExStage6Block);
          block.type = "";
          block.trap = 1;
          block.sprite_index = sprSyBlock;
         }
         
         number = instance_create(0,0,objSymnumber);
         number.type = "Sym";
         
         sym = instance_create(32,496,objSpeedx3);
         sym.image_xscale = 3;
         sym.image_yscale = 0.5;
         sym.type = "Sym";
         
         sym = instance_create(320,288,objSpeedx1);
         sym.image_xscale = 1;
         sym.image_yscale = 10;
         sym.type = "Sym";
         
         sym = instance_create(416,352,objSpeedx2);
         sym.image_xscale = 3;
         sym.image_yscale = 1;
         sym.type = "Sym";
         
         sym = instance_create(672,128,objSpeedx3);
         sym.image_xscale = 1;
         sym.image_yscale = 2;
         sym.type = "Sym";
         
         sym = instance_create(48,224,objSpeedx1);
         sym.image_xscale = 2;
         sym.image_yscale = 2.5;
         sym.type = "Sym";
         
         sym = instance_create(160,160,objSpeedx2);
         sym.image_xscale = 1;
         sym.image_yscale = 2;
         sym.type = "Sym";
         break;
    case 4://blood festival 
         with(objExStage6Block)
         {
          sprite_index = sprBfSpikeBlock;
         }
         scrExTrapsChange6(sprBfSpikeUp,sprBfSpikeDown,sprBfSpikeLeft,sprBfSpikeRight);
         with(all)
         {
          if(type == "Sym")
                  instance_destroy();
         }
         with(objExStage6Block)
         {
          if(trap == 1)
          {
           instance_change(objBlockFake,true);
           sprite_index = sprBfSpikeBlock;
           type = "";
           trap = 1;
          }
         }
         
         invis = instance_create(32,416,objBlockInvis);
         invis.type = "Bf";
         invis.sprite_index = sprBfSpikeBlock;
         
         invis = instance_create(64,416,objBlockInvis);
         invis.type = "Bf";
         invis.sprite_index = sprBfSpikeBlock;
         
         invis = instance_create(96,416,objBlockInvis);
         invis.type = "Bf";
         invis.sprite_index = sprBfSpikeBlock;
         
         trg = instance_create(32,400,objFreeTrigger);
         trg.type = "";
         trg.trg = 2;
         trg.image_xscale = 3;
         break;
    case 5://Kill The Guy
         background_visible[1] = true;
         
         with(all)
         {
          if(type == "Bf")
          {
           instance_destroy();
          }
         }
         
         for(var i = 0;i&lt;3;i++)
         {
          block = instance_create(64,288+32*i,objExStage6Block);
          block.type = "";
          block.trap = 1;
          block.sprite_index = sprSyBlock;
         }
         with(objExStage6Block)
         {
          sprite_index = sprKtgBlock;
          image_index = irandom(3);
         }
         scrCreateWarp(304,160,0.5,3,6);
         scrExTrapsChange6(sprKtgSpikeUp,sprKtgSpikeDown,sprKtgSpikeLeft,sprKtgSpikeRight);
         ktg = instance_create(160,544,objExKtgPlatform);
         ktg.type = "KTG";
         ktg.image_xscale = 0.5;
         ktg.xspeed = 1;
         
         ktg = instance_create(608,192,objExKtgPlatform);
         ktg.type = "KTG";
         ktg.image_xscale = 0.5;
         ktg.xspeed = -1;
         
         for(var i = 0;i&lt;4;i++)
         {
          ktg = instance_create(192+32*i,352,objKtgLaser1);
          ktg.type = "KTG";
         }
         
         for(var i = 0;i&lt;3;i++)
         {
          ktg = instance_create(416+32*i,352,objKtgLaser1);
          ktg.type = "KTG";
         }
         
         for(var i = 0;i&lt;6;i++)
         {
          ktg = instance_create(544,384+32*i,objKtgLaser2);
          ktg.type = "KTG";
         }
         
         ktg = instance_create(640,384,objKtgLaser1);
         ktg.type = "KTG";
         
         for(var i = 0;i&lt;2;i++)
         {
          ktg = instance_create(608+32*i,224,objKtgLaser1);
          ktg.type = "KTG";
         }
         
         ktg = instance_create(384,160,objKtgLaser2);
         ktg.type = "KTG";
         
         ktg = instance_create(448,64,objKtgLaser2);
         ktg.type = "KTG";
         
         for(var i = 0;i&lt;2;i++)
         {
          ktg = instance_create(480,192+32*i,objKtgLaser2);
          ktg.type = "KTG";
         }
         
         for(var i = 0;i&lt;2;i++)
         {
          ktg = instance_create(512,32+32*i,objKtgLaser2);
          ktg.type = "KTG";
         }
         
         
         ktg = instance_create(448,224,objDrumTong);
         ktg.type = "KTG";
         
         ktg = instance_create(544,224,objDrumTong);
         ktg.type = "KTG";
         
         ktg = instance_create(240,320,objKtgKiller1);
         ktg.type = "KTG";
         ktg.S = 2;
         ktg.D = 0;
         ktg.I = 1;
         
         ktg = instance_create(688,288,objKtgKiller1);
         ktg.type = "KTG";
         ktg.S = 2;
         ktg.D = 0;
         ktg.I = 1;
         
         ktg = instance_create(784,384,objKtgKiller1);
         ktg.type = "KTG";
         ktg.S = 2;
         ktg.D = 180;
         ktg.I = -1;
         
         ktg = instance_create(800,192,objKtgKiller3);
         ktg.type = "KTG";
         ktg.S = 2;
         ktg.D = 180;
         ktg.I = -1;
         ktg.image_xscale = 2;
         ktg.image_yscale = 2;
         
         ktg = instance_create(784,64,objKtgKiller1);
         ktg.type = "KTG";
         ktg.S = 1;
         ktg.D = 180;
         ktg.I = -1;
         break;
    case 6:
         with(objExStage6Block)
         {
          sprite_index = sprBfSpikeBlock;
         }
         with(all)
         {
          if(type == "KTG")
          {
           instance_destroy();
          }
         }
         background_visible[1] = false;
         scrExTrapsChange6(sprBfSpikeUp,sprBfSpikeDown,sprBfSpikeLeft,sprBfSpikeRight);
         
         trg = instance_create(64,160,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 1;
         trg.image_yscale = 0.5;
         trg.trg = 3;
         
         trg = instance_create(32,496,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 3;
         trg.image_yscale = 0.5;
         trg.trg = 4;
         
         trg = instance_create(192,112,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 3;
         trg.image_yscale = 0.5;
         trg.trg = 5;
         
         trg = instance_create(224,272,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 1;
         trg.image_yscale = 0.5;
         trg.trg = 6;
         
         trg = instance_create(304,160,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 7;
         trg.image_yscale = 3;
         trg.trg = 7;
         
         trg = instance_create(288,432,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 1;
         trg.image_yscale = 0.5;
         trg.trg = 8;
         
         trg = instance_create(512,432,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 1;
         trg.image_yscale = 0.5;
         trg.trg = 9;
         
         trg = instance_create(544,32,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 0.5;
         trg.image_yscale = 2;
         trg.trg = 10;
         
         trg = instance_create(544,224,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 4;
         trg.image_yscale = 1;
         trg.trg = 11;
         
         trg = instance_create(544,336,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 1;
         trg.image_yscale = 0.5;
         trg.trg = 12;
         
         trg = instance_create(608,560,objFreeTrigger);
         trg.type = "";
         trg.image_xscale = 1;
         trg.image_yscale = 0.5;
         trg.trg = 13;
         
         for(var i = 0;i&lt;3;i++)
         {
          block = instance_create(64,192+32*i,objBlockInvis);
          block.sprite_index = sprBfSpikeBlock;
          block.type = "";
         }
         
         for(var i = 0;i&lt;5;i++)
         {
          block = instance_create(416+i*32,96,objBlockInvis);
          block.sprite_index = sprBfSpikeBlock;
          block.type = "";
         }
         
         for(var i = 0;i&lt;2;i++)
         {
          block = instance_create(608+i*32,256,objBlockInvis);
          block.sprite_index = sprBfSpikeBlock;
          block.type = "";
         }
         
         block = instance_create(736,384,objBlockInvis);
         block.sprite_index = sprBfSpikeBlock;
         block.type = "";
         
         
         with(objExStage6Block)
         {
          if(trap == 3)
          {
           instance_change(objBlockFake,true);
           sprite_index = sprBfSpikeBlock;
          }
          if(trap == 2)
          {
           y-=10;
          }
         }
         break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
