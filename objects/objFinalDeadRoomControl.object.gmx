<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTriggerMask</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(objFinalDeadRoomClock.phase &lt; -1) exit;
if(!instance_exists(objPlayer)) exit;

if(scrButtonCheckPressed(global.upButton))
{
 with(objFinalDeadRoomClock)
 {
  if(phase == -1)
  {
   pointer++;
   if(pointer &gt; 11)
   {
    pointer = 0;
   }
  }
  else if(phase == 0)
  {
   if(pointer == handL)
   {    
    if(cells[handR] != -1)
     pointer = handR;
   }
   else if(pointer == handR)
   {    
    if(cells[handL] != -1)
     pointer = handL;
   }
  }
 }
}
if(scrButtonCheckPressed(global.downButton))
{
 with(objFinalDeadRoomClock)
 {
  if(phase == -1)
  {
   pointer--;
   if(pointer &lt; 0)
   {
    pointer = 11;
   }
  }
  else if(phase == 0)
  {
   if(pointer == handL)
   {    
    if(cells[handR] != -1)
     pointer = handR;
   }
   else if(pointer == handR)
   {    
    if(cells[handL] != -1)
     pointer = handL;
   }
  }
 }
}

if(scrButtonCheckPressed(global.shootButton))
{
 with(objFinalDeadRoomClock)
 {
  if(phase == -1 || phase == 0)
   if(rotateDone[0] &amp;&amp; rotateDone[1])
   {
    phase = 1;
    handL = pointer - cells[pointer];    
    if(handL &lt; 0)
     handL += 12; 
         
    handR = pointer + cells[pointer];
    if(handR &gt; 11)
     handR -= 12;
     
    audio_play_sound(global.sndClock1,0,0);
    cells[pointer] = -1;
    rotateDone[0] = false;
    rotateDone[1] = false;
   }
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
