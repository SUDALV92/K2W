<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>energyBlocksCrashed = 0;
t = 1;
modFactor = 0.1; //never
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(energyBlocksCrashed == 1)
{
 modFactor = 40;
}
if(energyBlocksCrashed == 2)
{
 modFactor = 20;
}
if(energyBlocksCrashed == 3)
{
 modFactor = 10;
}
if(energyBlocksCrashed == 4)
{ 
 energyBlocksCrashed = -1; //call once
 if(global.grav == 1) 
 {
  modFactor = 5;
  view_angle[0] = 180;
  scrFlipGrav(false);
  with(objPlayer)
  {
   invertedControls = true;
  }
  with(objExtraStageBallSpawner)
  {
   glitched = true;
  }
  with(objExtraStageRedEnergy)
  {
   gravity = 0;
   if(speed &gt; 3)
    speed = 3;
   instance_change(objExtraStageRedEnergyGlitched,false);
  }
  with(objExtraStageFlameSpawner)
  {
   reset = 200;
  }
  with(objRoomChanger)
  {
   instance_change(objBlock,false);
  }
  scrObjectDestroy(objSave);
  block = instance_create(2400,832,objBlock);
  block.image_yscale = 4;
  placed = false;
  point = choose(2,3,4,5,6);
  switch(point)
  {
   case 2: newX = 928; newY = 544; break;
   case 3: newX = 1184; newY = 448; break;
   case 4: newX = 1664; newY = 448; break;
   case 5: newX = 2368; newY = 160; break;
   case 6: newX = 2400; newY = 512; break;
  }
  warp = instance_create(newX,newY,objWarpGlitch);
  warp.autosave = true;
  warp.image_angle = 180;
  
  trackPosition = audio_sound_get_track_position(global.currentMusic);
  scrPlayMusic(global.sndExtraStageGlitched,1);
  audio_sound_set_track_position(global.currentMusic,trackPosition);
  
 }
}
if(t % modFactor == 0)
{
 newX = irandom_range(view_xview[0],view_xview[0]+800);
 newX = round(newX/32)*32;
 newY = irandom_range(view_yview[0],view_yview[0]+608);
 newY = round(newY/32)*32;
 instance_create(newX,newY,objGlitch);  
}


t++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
