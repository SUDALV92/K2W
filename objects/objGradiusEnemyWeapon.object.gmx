<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGradiusEnemyWeapon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
xscale = 1;
shootDelay = 50;
hp = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(objB6Gradius))
 direction = point_direction(x,y,objB6Gradius.x,objB6Gradius.y);

 
if(direction - image_angle &gt;= 0 &amp;&amp; direction - image_angle &lt; 30)
{
 image_index = 0;
 xscale = 1;
}
else if(direction - image_angle &gt;= 30 &amp;&amp; direction - image_angle &lt; 60)
{
 image_index = 1;
 xscale = 1;
}
else if(direction - image_angle &gt;= 60 &amp;&amp; direction - image_angle &lt; 90)
{
 image_index = 2;
 xscale = 1;
}
else if(direction - image_angle &gt;= 90 &amp;&amp; direction - image_angle &lt; 120)
{
 image_index = 2;
 xscale = -1;
}
else if(direction - image_angle &gt;= 120 &amp;&amp; direction - image_angle &lt; 150)
{
 image_index = 1;
 xscale = -1;
}
else if(direction - image_angle &gt;= 150 &amp;&amp; direction - image_angle &lt; 270)
{
 image_index = 0;
 xscale = -1;
}
else if(direction - image_angle &gt;= 270)
{
 image_index = 0;
 xscale = 1;
}
image_xscale = 1 * xscale;

if(direction - image_angle &gt;= 0 &amp;&amp; direction - image_angle &lt;= 180 &amp;&amp; shootDelay == 0)
{
 if(image_angle == 180)
  yy = y + 4;
 else
  yy = y - 4;
  
 laser = instance_create(x,yy,objBoss6EnemyBullet);
 laser.direction = direction;
 laser.image_angle = direction;
 laser.speed = 2;
 shootDelay = 100;
} 

if(shootDelay &gt; 0)
 shootDelay--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objGradiusLaser">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(other);
hp--;
with(objB6Gradius)
{
 event_user(1);
}

if(hp &lt;= 0)
{
 instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
