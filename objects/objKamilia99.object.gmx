<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprKamiliaMain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>objMagicCircler</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-360</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>305</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_timeline_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>14</kind>
            <timeline>timelinelsb</timeline>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_sound_gain(global.currentMusic,1,0);
W=10000;
image_speed=0;
objBlack.depth=-100;
with(objChaost){instance_destroy();}

instance_create(x,y,objKamiliaFace);
//objKamiliaFace.image_index=2;
fullhp=130;
hp=fullhp;
alarm[11]=3;
attdelay=0;
QS=0;
A=0;
AK=0;
adelay=0;
C=0;
cc=0;
d=0;
Wg=0;
Q=0;
q=0;
ready = false;
attackType[9] = 0;
blocked = false;
i=0;
hadoukenShifted = false;
nextGWater = 0;
attack1 = 0;
attack2 = 0;
phase3 = false;
p3 = 0;
p3HP = 5;
flickering = false;
movingT = 0;
score = 300+hp; //DeadSplit support
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ec=instance_create(x,y,objKamiliaEffect);
ec.sprite_index=sprite_index;
if(sprite_index == sprKamiliaMain2)
    ec.image_index = image_index;
alarm[11]=3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AK == 6
audio_stop_sound(global.sndTanmak);
audio_play_sound(global.sndTanmak,0,0);
repeat(15){
asd=instance_create(400,236,objChaosss);
asd.speed=10;
if(instance_exists(objPlayer))
    asd.direction=point_direction(asd.x,asd.y,objPlayer.x,objPlayer.y)+d;
else
    asd.direction = d;
asd.A=1;
d+=24;}
alarm[9] = 35;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AK == 5
audio_stop_sound(global.sndTanmak);
audio_play_sound(global.sndTanmak,0,0);
curving = choose(-1,1);
repeat(24)
{
 asd=instance_create(400,236,objChaosss);
 asd.speed=6;
 asd.direction=random(12)+d;
 asd.curving = curving;
 d+=15;
}
alarm[8] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AK == 4
audio_stop_sound(global.sndTanmak2);
audio_play_sound(global.sndTanmak2,0,0);
asdfa = 0;
rngAngle = irandom_range(-10,10);
repeat(5)
{
asdh=instance_create(400,236,objChaosss);
asdh.speed=random_range(8,11);
if(instance_exists(objPlayer))
    asdh.direction=point_direction(400,236,objPlayer.x,objPlayer.y)+rngAngle-15+asdfa;
else asdh.direction = asdfa;
asdfa+=10;
}
alarm[7] = 30;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AK == 3
audio_stop_sound(global.sndTanmak);
audio_play_sound(global.sndTanmak,0,0);
repeat(13)
{
 asdg=instance_create(irandom_range(390,500),236,objChaossg);
 asdg.speed=random_range(3,9);
 asdg.direction=random_range(40,85);
}
repeat(13)
{
 asdg=instance_create(irandom_range(300,390),236,objChaossg);
 asdg.speed=random_range(3,9);
 asdg.direction=random_range(85,140);
}
alarm[6] = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_sound(global.sndTanmak);
audio_play_sound(global.sndTanmak,0,0);
angle = random(360);
repeat(30)
{
 asd=instance_create(400,236,objChaosss);
 asd.speed=random_range(5,10);
 asd.friction = 0.5;
 asd.mode = 2;
 asd.direction=angle;
 angle+=360/30;
}
alarm[5] = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///enable solgryn lasers



blockType = choose(1);
switch(blockType)
{
    case 1:
        audio_play_sound(global.sndSolgrynLS,0,0);
        instance_create(0,272,objLaserLSA);
        instance_create(64,368,objLaserLSA);
        instance_create(736,368,objLaserLSA);
        instance_create(800,272,objLaserLSA);
        break;
    case 2:
        instance_create(64,624,objLukaBisuk);
        instance_create(736,624,objLukaBisuk);
        audio_play_sound(global.sndQuake,0,0);
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objPlayer)
{
    room_goto(rBoss7Phase4Pre);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switch to barrages

if(instance_exists(objLaserLSA))
{
    with(objLaserLSA)
    {
        instance_destroy();
    }
}

if(instance_exists(objLukaBisuk))
{
    with(objLukaBisuk)
    {
        alarm[0] = 1;
        alarm[1] = 61;
    }
}
if(attackType[1])
{
    with(objJirachi) instance_destroy();
    with(objJirachistarL) instance_destroy();
    with(objJirachistar) instance_destroy();
    attackType[1] = false;
}
if(attackType[2])
{
    with(objCrazySpikeBoss) instance_destroy();
    with(objCrazySpike) instance_destroy();
    attackType[2] = false;
}
if(attackType[3])
{
    with(objFlandreScarlet) instance_destroy();
    with(objFlandreTanmak1) instance_destroy();
    with(objFlandreTanmak2) instance_destroy();
    attackType[3] = false;
}
if(attackType[4])
{
    with(objSpaceInvaders) instance_destroy();
    scrObjectDestroy(objSpaceInvaderl);
    attackType[4] = false;
}
if(attackType[5])
{
    with(objViridian) instance_destroy();
    with(objViridianTan1) instance_destroy();
    with(objViridianTan2) instance_destroy();
    attackType[5] = false;
}
if(attackType[6])
{
    attackType[6] = false;
}
if(attackType[7])
{
    attackType[7] = false;
}
if(attackType[8])
{
    attackType[8] = false;
}
if(attackType[9])
{
    attackType[9] = false;
}


blocked = false;
ready = false;
//alarm[5] = 1;
if(!phase3)
{
    timeline_position = 0;
    timeline_speed = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(objKamiliaFace))
    objKamiliaFace.image_index=0;
else
    image_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Q=1{
if(instance_exists(objPlayer))
{
    audio_stop_sound(global.sndTanmak2);
    audio_play_sound(global.sndTanmak2,0,0);
    repeat(1)
    {
        asda=instance_create(400,236,objChaosss);
        asda.speed=random_range(7,10);
        asda.direction=point_direction(400,236,objPlayer.x,objPlayer.y)+random_range(-20,20);
        q+=12;
    }
}
alarm[0]=6;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if attdelay&gt;0{attdelay-=1;}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase 2
if(instance_exists(objPlayer) &amp;&amp; ready &amp;&amp; !phase3)
{    
    if(!blocked) //do this once
    {
        alarm[4] = 50; //enable solgryn lasers
        blocked = true;
        alarm[2] = 500;
        attack1 = choose(1,2,3,4,8);
        attack2 = attack1;
        while(attack2 == attack1)
        {
            attack2 = choose(6,7,9);
        }
        switch(attack1)
        {
            case 1: attackType[1] = true; break;
            case 2: attackType[2] = true; break;
            case 3: attackType[3] = true; break;
            case 4: attackType[4] = true; break;
            case 5: attackType[5] = true; break;
            case 8: attackType[8] = true; break;
        }
        switch(attack2)
        {
            case 6: attackType[6] = true; break;
            case 7: attackType[7] = true; break;
            case 9: attackType[9] = true; break;
        }  
    }
    //do this every step
    if(attackType[1])
    {
        if(i == 0)
        {
            jirachi = instance_create(400,-120,objJirachi);
            jirachi.visible = false;
        }
    }
    if(attackType[2])
    {
        if(i &lt;= 400 &amp;&amp; i % 8 == 0)
        {
            a=instance_create(irandom_range(-100,400),-32,objCrazySpike);
            a.speed=random_range(3,8);
            a.direction=315;
            a.sprite_index = sprCrazySpikeBold;
            
            a=instance_create(irandom_range(400,900),-32,objCrazySpike);
            a.speed=random_range(3,8);
            a.direction=225;
            a.sprite_index = sprCrazySpikeBold;
        }
    }
    if(attackType[3])
    {
        if(i == 0)
        {
            flandre = instance_create(400,-60,objFlandreScarlet);
            flandre.visible = false;
        }
    }
    if(attackType[4])
    {
        if(i mod 150 == 0)
        {
            instance_create(352,-100,objSpaceInvaders);
        }        
    }
    if(attackType[5])
    {
        if(i == 0)
        {
            viridian = instance_create(400,50,objViridian)
            viridian.visible = false;
            viridian.A = 1;
            viridian.alarm[0] = 10;
        }
    }
    if(attackType[6])
    {
        if(i != 0 &amp;&amp; i &lt; 400 &amp;&amp; i mod 120 == 0)
        {
            lavaX = 0;
            repeat(20)
            {
                lava = instance_create(lavaX,548,objExBoss2_Lava);
                //lava.movSpeed = 3;
                //lava.grav = 0.06;
                lavaX += 48;
            }
        }
    }
    if(attackType[7])
    {
        if(i &lt; 400 &amp;&amp; i % 50 == 0)
        {
            audio_play_sound(global.sndGeezer2,0,0);
            
            A=instance_create(16,choose(464,432,400,368),objKtgBullet);
            A.speed=5;//random_range(3,5);
            A.direction = 0;
            A.image_xscale = 1;
            
            A=instance_create(784,choose(464,432,400,368),objKtgBullet);
            A.speed=5;//random_range(3,5);
            A.direction = 180;
            A.image_xscale = -1;
        }
    }
    if(attackType[8])
    {
        if(i &gt;= 60 &amp;&amp; i &lt;= 330 &amp;&amp; i % 30 == 0)
        {
            hadoukenX = irandom(36);
            repeat(20)
            {
                if(hadoukenShifted)
                {
                    hadouken = instance_create(-300+hadoukenX+36,-80,objHadoken);
                    hadouken.hspeed = -2;
                }
                else
                {
                    hadouken = instance_create(-300+hadoukenX,-80,objHadoken);   
                    hadouken.hspeed = 2;
                }
                hadouken.vspeed = 6;
                hadoukenX += 72;
            }
            a=instance_create(x,y,objLShake);
            a.shake=3;
            a.timer=10;
            hadoukenShifted = !hadoukenShifted;
            audio_play_sound(global.sndHadoken,0,0);
        }
    }
    if(attackType[9])
    {
        if(i mod 100 == 0)
        {
            gwaterOption = 0;
            gwaterDirection = 0;
            audio_stop_sound(global.sndWater);
            sfx = audio_play_sound(global.sndWater,0,0);
            audio_sound_gain(sfx,0.6,0);
            
            e1=instance_create(16+gwaterOption,496,objGWater1);
            e1.direction=gwaterDirection;
            e1.speed=5;
            e1.image_index=0;
            e2=instance_create(0+gwaterOption,496,objGWater1);
            e2.direction=gwaterDirection;
            e2.speed=5;
            e2.image_index=1;
            e3=instance_create(-16+gwaterOption,496,objGWater1);
            e3.direction=gwaterDirection;
            e3.speed=5;
            e3.image_index=3;
            nextGWater = i + irandom_range(20,50);
        }
        if(i == nextGWater)
        {
            gwaterOption = 800;
            gwaterDirection = 180;
            audio_play_sound(global.sndWater,0,0);
            e1=instance_create(16+gwaterOption,496,objGWater1);
            e1.direction=gwaterDirection;
            e1.speed=5;
            e1.image_index=0;
            e2=instance_create(0+gwaterOption,496,objGWater1);
            e2.direction=gwaterDirection;
            e2.speed=5;
            e2.image_index=1;
            e3=instance_create(-16+gwaterOption,496,objGWater1);
            e3.direction=gwaterDirection;
            e3.speed=5;
            e3.image_index=3;
        }
    }
    i++;
}
else i = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Phase 3
if(flickering)
{
    if(p3 mod 4 == 0)
    {
        minAlpha = p3HP/6.25;
        maxAlpha = minAlpha + 0.4;
        if(maxAlpha &gt; 1) maxAlpha = 1;
        image_alpha = random_range(minAlpha,maxAlpha);
    }
}
if(phase3)
{
    flickering = true;
    if(p3 == 0)
    {
        audio_play_sound(global.sndMaggic,0,0);
        Q=0;
        q=0;
        asdfa=0;
        d=0;
        with(objMagicCircler){instance_destroy();}
        with(objChaosTan1){instance_destroy();}
        with(objChaosss){instance_destroy();}
        with(objChaossg){instance_destroy();}
        instance_create(400,416,objLastTimer);
        instance_create(0,0,objFBossAppear);
        shuffled = ds_list_create();
        shuffled[| 0] = 0;
        shuffled[| 1] = 72;
        shuffled[| 2] = 144;
        shuffled[| 3] = 216;
        shuffled[| 4] = 288;
        ds_list_shuffle(shuffled);
        
        a1=instance_create(400,304,objChaostt1);
        a1.speed=9;
        a1.friction=0.2;
        a1.direction=shuffled[| 0];
        a2=instance_create(400,304,objChaostt2);
        a2.speed=9;
        a2.friction=0.2;
        a2.direction=shuffled[| 1];
        a3=instance_create(400,304,objChaostt3);
        a3.speed=9;
        a3.friction=0.2;
        a3.direction=shuffled[| 2];
        a4=instance_create(400,304,objChaostt4);
        a4.speed=9;
        a4.friction=0.2;
        a4.direction=shuffled[| 3];
        a5=instance_create(400,304,objChaostt5);
        a5.speed=9;
        a5.friction=0.2;
        a5.direction=shuffled[| 4];
        objChaostt1.A=1;
        objChaostt2.A=1;
        objChaostt3.A=1;
        objChaostt4.A=1;
        objChaostt5.A=1;
        objChaostt1.dir=shuffled[| 0];
        objChaostt2.dir=shuffled[| 1];
        objChaostt3.dir=shuffled[| 2];
        objChaostt4.dir=shuffled[| 3];
        objChaostt5.dir=shuffled[| 4];
        Wg=1;
    }
    if(p3 &gt; 0)
    {
     orbsCount = 0;
     sumHP = 0;
     if(instance_exists(objChaostt1)) { orbsCount++; sumHP += objChaostt1.hp; }
     if(instance_exists(objChaostt2)) { orbsCount++; sumHP += objChaostt2.hp; }
     if(instance_exists(objChaostt3)) { orbsCount++; sumHP += objChaostt3.hp; }
     if(instance_exists(objChaostt4)) { orbsCount++; sumHP += objChaostt4.hp; }
     if(instance_exists(objChaostt5)) { orbsCount++; sumHP += objChaostt5.hp; }
     score = 100 + sumHP; //DeadSplit support
     switch(orbsCount)
     {
      case 1:
       with(objChaostt1) { attackDelay = 10; attackAcceleration = 0.2;} //100
       with(objChaostt2) { attackDelay = 4; attackSpeed = 8 }//30
       with(objChaostt3) { attackDelay = 1; attackRotation = 25; attackSpeed = 7; }//20
       with(objChaostt4) { attackDelay = 20; attackDensity = 12; attackSpeed = 2; }//150
       with(objChaostt5) { attackDelay = 30; attackSpeed = 8; }//100
       break;
      case 2:
       with(objChaostt1) { attackDelay = 30; attackAcceleration = 0.2; }
       with(objChaostt2) { attackDelay = 12; attackSpeed = 7; attackCurving = 0.9 }//30
       with(objChaostt3) { attackDelay = 2; attackRotation = 35; attackSpeed = 6; }//20
       with(objChaostt4) { attackDelay = 30; attackDensity = 10; attackSpeed = 2; }//150
       with(objChaostt5) { attackDelay = 40; attackSpeed = 6; }//100
       break;
      case 3:
       with(objChaostt1) { attackDelay = 50; attackAcceleration = 0.2; }
       with(objChaostt2) { attackDelay = 14; attackSpeed = 6; attackCurving = 0.8; }//30
       with(objChaostt3) { attackDelay = 4; attackRotation = 35; attackSpeed = 6; }//20
       with(objChaostt4) { attackDelay = 50; attackDensity = 10; attackSpeed = 2; }//150
       with(objChaostt5) { attackDelay = 70; attackSpeed = 5; }//100
       break; 
      case 4:
       with(objChaostt1) attackDelay = 70;
       with(objChaostt2) { attackDelay = 14; attackSpeed = 6; attackCurving = 0.6; }//30
       with(objChaostt3) { attackDelay = 7; attackRotation = 35; attackSpeed = 6; }//20
       with(objChaostt4) { attackDelay = 70; attackDensity = 8; attackSpeed = 2; }//150
       with(objChaostt5) { attackDelay = 100; attackSpeed = 5; }//100
       break;
     }
    }
    if(p3 = 15)
    {
        instance_create(400,304,objKamiliaAA);
        instance_create(400,304,objKamiliaAA);
    }
    if(p3 == 100)
    {
        scrPlayMusic(global.sndBoss7C,0);
        with(objFBBackground)
        {
            red = true;
        }
    }
    if(p3HP &lt;= 0)
    {
        phase3 = false;
        ready = false; //not need, but who knows, we don't wanna accidential phase 2 activating
        with(objKamiliaIntro)
        {
            action = true;
            score = hp; //DeadSplit support
        }
        
    }
    p3++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deal gamage
if Wg=0
{
    if (instance_exists(objKamiliaFace))
    {
        objKamiliaFace.image_index=1; alarm[1]=50;
    }
    if attdelay=0
    {
        audio_play_sound(global.sndBossHit,0,0);
        hp-=1; attdelay=5; visible=1;
        score = 300 + hp; //DeadSplit support
        
        /*OC=instance_create(random_range(180,620),random_range(96,224),objSolgrynOC);
        OC.image_alpha=0.5;
        OC.image_xscale=0; 
        OC.image_yscale=0;*/
        

        /*if hp&lt;30
        {
            OC=instance_create(random_range(80,720),random_range(96,224),objSolgrynOC);
            OC.image_alpha=random_range(0.5,0.8);
            OC.image_xscale=0; 
            OC.image_yscale=0;
        }

        if hp&lt;=10
        {
            OC=instance_create(random_range(80,720),random_range(96,224),objSolgrynOC);
            OC.image_alpha=random_range(0.5,0.8);
            OC.image_xscale=0; 
            OC.image_yscale=0;
        }*/
        if(hp &lt;= 0)
        {
            with(objSolgrynOC)
            {
                instance_destroy();
            }
            instance_create(400,304,objKamiliaIntro);
            instance_create(400,-500,objKamiliaMoon);
            timeline_speed = 0;
            alarm[5] = 0;
            alarm[6] = 0;
            alarm[7] = 0;
            alarm[8] = 0;
            alarm[9] = 0;
            alarm[2] = 1;
            phase3 = true;
            sprite_index = sprKamiliaMain2;
            with(objKamiliaFace)
            {
                instance_destroy();
            }
            with(objBlockBoss7A)
            {
             if(type == 10)
             {
              solid = false;
              gravity = 0.4;
             }
            }
            audio_play_sound(global.sndBreak,0,0);
            audio_sound_gain(global.currentMusic,0,2000);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_colour(c_orange);
//draw_text(100,520,"attack 1 = " + string(attack1));
//draw_text(600,520,"attack 2 = " + string(attack2));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
