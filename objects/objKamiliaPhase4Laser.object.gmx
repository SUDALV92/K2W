<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNueLaser2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>15</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mode = 1;
killer = true;
rotation = choose(-1,1);
pulsationDir = 0;
parent = noone;
shootPhase = 0;
i = 0;
j = 0;
image_speed = 0;
destroying = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(killer)
{
 if(place_meeting(x,y,objPlayer))
  scrKillPlayer();
}
if(destroying)
{
 killer = false;
 if(image_alpha &gt; 0)
  image_alpha -= 0.04;
 else
  instance_destroy();
}
if(mode == 2)
{
 if(y &gt;= 488)
 {
  y = 488;
  laser = instance_create(x,y,objKamiliaPhase4Laser);
  laser.image_xscale = 0.5;
  laser.mode = 3;
  laser.gravity_direction = 0;
  laser.gravity = 0.2;
  
  laser = instance_create(x,y,objKamiliaPhase4Laser);
  laser.image_xscale = 0.5;
  laser.mode = 3;
  laser.gravity_direction = 180;
  laser.gravity = 0.2;
  
  instance_destroy();
 }
}
if(mode == 3)
{
 if(image_xscale &lt; 1.5)
  image_xscale += 0.05;
}
if(mode == 4)
{
 image_angle += rotation*2;
 image_xscale = 6 + lengthdir_x(0.4,pulsationDir);
 pulsationDir += 5;
 if(instance_exists(parent))
 {   
  x = parent.x;
  y = parent.y;
 }
 else instance_destroy();
}
if(mode == 5)
{
 if(instance_exists(parent))
 {
  image_angle = parent.image_angle;
  image_alpha = parent.image_alpha;
  if(image_alpha &lt; 1)
   killer = false;
   
  x = parent.x;
  y = parent.y;
  if(shootPhase == 0 &amp;&amp; parent.speed &lt; 0.1)
  {
   if(global.sfxDelay[0] &lt;= 0)
   {
    audio_play_sound(global.sndBladeExpand,0,0);
    global.sfxDelay[0] = 10;
   }
   shootPhase = 1;
  }
  if(shootPhase == 1)
  {
   if(image_xscale &lt; 10)
    image_xscale += 1;
   else
    shootPhase = 2;
  }
  if(shootPhase == 2)
  {
   if(i == 50)
    shootPhase = 3;
   i++;
  }
  if(shootPhase == 3)
  {
   if(image_xscale &gt; 1)
   {
    image_xscale -= 1;
   }
   else
   {
    image_xscale = 0; 
    parent.ASD = 1;
   }
  }
 }
 else instance_destroy();
}
if(mode == 6)
{
 if(shootPhase == 0)
 {
  image_angle += rotation/2;
  image_alpha = 1;
  killer = true;
  i++;
  j = 0;
 }
 if(i == 40)
 {
  shootPhase = 1;
  killer = false;
  image_alpha = 0.5;
  j++;
 }
 if(j == 50)
 {
  shootPhase = 0;
  i = 0;
  j = 0;
  if(global.sfxDelay[0] &lt;= 0)
  {
   audio_play_sound(global.sndLaser,0,0);
   global.sfxDelay[0] = 10;
  }
 }
}
if(mode == 7)
{
 if(speed &gt; 2)
  speed = 2;
 if(speed &lt; -2)
  speed = -2;
  
 if(i == 50)
 {
  if(global.sfxDelay[0] &lt;= 0)
  {
   audio_play_sound(global.sndLaser,0,0);
   global.sfxDelay[0] = 4;
  }
  killer = true;
  image_alpha = 1;
  if(image_index == 0)
  {
   gravity_direction = 0;
   gravity = 0.05;
  }
  else
  {
   gravity_direction = 180;
   gravity = 0.05;
  }
 }
 if(i == 150)
 {
  gravity = 0;
  friction = 0.05;
 }
 i++;
 if(friction != 0 &amp;&amp; speed = 0)
 {
  friction = 0;
  if(image_index == 0)
   image_index = 1;
  else
   image_index = 0;
  
  killer = false;
  image_alpha = 0.5;
  i = 0;
 } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(mode)
{
 case 7:
  break;
 default:
  instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_add);
draw_self();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
