<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTitle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha=0;
saveStatus = 0; // 0 = not exists, 1 = loaded, -1 = broken
//load save file values

    if (file_exists("Data\save"))  //check if current save exists
    {
        //load save data
        exists[0] = true;
        
        //load the save map
        var saveMap;
        
        if (global.extraSaveProtection) //use ds_map_secure function
        {
            saveMap = ds_map_secure_load("Data\save");
        }
        else    //use text file
        {
            var f = file_text_open_read("Data\save");
            
            saveMap = json_decode(base64_decode(file_text_read_string(f)));
            
            file_text_close(f);
        }
        
        if (saveMap != -1)  //check if the save map loaded correctly
        {
            death[0] = ds_map_find_value(saveMap,"death");
            if (is_undefined(death[0])) //check for undefined value in case the save was messed with or got corrupted
                death[0] = 0;
            
            time[0] = ds_map_find_value(saveMap,"time");
            if (is_undefined(time[0]))
                time[0] = 0;
                
            
            clear[0] = ds_map_find_value(saveMap,"saveGameClear");
            if (is_undefined(clear[0]))
                clear[0] = false;
            
            ds_map_destroy(saveMap);
            saveStatus = 1;
        }
        else
        {
            //save map didn't load correctly, set the variables to the defaults
            death[0] = 0;
            time[0] = 0;
            clear[0] = false;
            saveStatus = -1;
            room_goto(rSaveBroken);
        }
    }
    else
    {
        exists[0] = false;
        death[0] = 0;
        time[0] = 0;
        saveStatus = 0;
    }
    
    var t = time[0];
    
    timeStr[0] = string(t div 3600) + ":";
    t = t mod 3600;
    timeStr[0] += string(t div 600);
    t = t mod 600;
    timeStr[0] += string(t div 60) + ":";
    t = t mod 60;
    timeStr[0] += string(t div 10);
    t = t mod 10;
    timeStr[0] += string(floor(t));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>objTitleE</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(scrButtonCheckPressed(global.suicideButton))
{
    if !instance_exists(objTitlefadeout)
     room_goto(rOptions);
}
else if(scrButtonCheckPressed(global.menuAcceptButton))
{
    if !instance_exists(objTitlefadeout)
    {
        switch(saveStatus)
        {
            case 0: 
                room_goto(global.startRoom);
                global.gameStarted = true; //sets game in progress (enables saving, restarting, etc.)
                global.autosave = true;
                global.lastRunStart[0] = 0;
                global.currentSegmentIndex = 0;
                //useless for K2W
                //global.currentSegmentID = irandom(1000000);
                //global.lastRunStart[14] = 0;
                //global.globalSegmentID = irandom(1000000);
                break;
            case 1: 
                scrLoadGame(true); 
                break;
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(scrButtonCheckReleased(global.alignLeftButton))
{
    if(file_exists("Data\save"))
    {
        if(show_question("Delete all game progress?"))
        {
            file_delete("Data\save");
            game_restart();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_halign(fa_left);
draw_set_font(fJoystix20);
draw_set_colour(c_white);
scrDrawTextOutline(100,542,"Deaths: " + string(death[0]),c_white,c_black);
scrDrawTextOutline(100,572,"Time  : " + timeStr[0],c_white,c_black);
draw_set_font(fJoystix10);
draw_set_halign(fa_right);
scrDrawTextOutline(614,550,global.gameVersion,c_white,c_black);
draw_set_halign(fa_left);
draw_set_font(fJoystix12);

//check whether to display keyboard or controller buttons
if (!global.controllerMode)
{
    scrDrawTextOutline(100,20,"Start: " + scrGetKeybind(global.jumpButton[0]),c_white,c_black);
    scrDrawTextOutline(100,40,"Options: " + scrGetKeybind(global.suicideButton[0]),c_white,c_black);
}
else
{
    scrDrawTextOutline(100,20,"Start: " + scrGetControllerBind(global.jumpButton[1]),c_white,c_black);
    scrDrawTextOutline(100,40,"Options: " + scrGetControllerBind(global.suicideButton[1]),c_white,c_black);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
